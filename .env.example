# ===========================================
# Environment Configuration Template
# Comprehensive Chatbot Management System
# ===========================================
# This file contains all environment variables needed for the complete
# chatbot management system. Copy this file to .env.local and fill in
# the actual values for your environment.

# ===========================================
# CORE AUTHENTICATION & DATABASE
# ===========================================

# Stack Auth Configuration
# Get these values from your Stack Auth dashboard: https://app.stack-auth.com/
NEXT_PUBLIC_STACK_PROJECT_ID=your_stack_project_id_here
NEXT_PUBLIC_STACK_PUBLISHABLE_CLIENT_KEY=pck_your_publishable_key_here
STACK_SECRET_SERVER_KEY=ssk_your_secret_server_key_here

# Database Configuration
# Get this from your Neon dashboard: https://console.neon.tech/
DATABASE_URL=postgresql://username:password@hostname/database_name?sslmode=require

# ===========================================
# AWS SERVICES (BAWS prefix for Amplify)
# ===========================================

# AWS Credentials
# Use BAWS prefix for AWS Amplify compatibility
BAWS_ACCESS_KEY_ID=your_aws_access_key_id
BAWS_SECRET_ACCESS_KEY=your_aws_secret_access_key

# AWS Regions
DEFAULT_REGION=ap-southeast-1
BEDROCK_REGION=us-east-1

# AWS S3 Configuration
# Optional: Override default bucket names
S3_DOCUMENTS_BUCKET=chatbot-documents-${NODE_ENV}
S3_UPLOADS_BUCKET=chatbot-uploads-${NODE_ENV}
# For development: Use the actual bucket name created
# S3_BUCKET_NAME=chatbot-documents-ap-southeast-1-TIMESTAMP

# ===========================================
# LLM PROVIDERS & AI SERVICES
# ===========================================

# AWS Bedrock Configuration (Primary LLM Provider)
# No additional config needed - uses AWS credentials above

# OpenAI Configuration (Optional)
# Get from: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-your_openai_api_key_here
OPENAI_ORGANIZATION_ID=org-your_organization_id

# Anthropic Configuration (Optional)
# Get from: https://console.anthropic.com/
ANTHROPIC_API_KEY=sk-ant-your_anthropic_api_key_here

# ===========================================
# DOCUMENT PROCESSING & OCR
# ===========================================

# Mistral OCR Service
# Get from your Mistral provider
MISTRAL_API_KEY=your_mistral_api_key_here

# LlamaIndex OCR Service
# Get from: https://cloud.llamaindex.ai/
LLAMAINDEX_API_KEY=llx-your_llamaindex_api_key_here

# ===========================================
# VECTOR DATABASE & SEARCH
# ===========================================

# Vector Database Configuration
# pgvector extension configuration (auto-detected from DATABASE_URL)
VECTOR_DIMENSION=1536
VECTOR_SIMILARITY_FUNCTION=cosine

# Search Configuration
DEFAULT_RETRIEVAL_K=5
DEFAULT_SCORE_THRESHOLD=0.7
MAX_CONTEXT_WINDOW=8000

# ===========================================
# EXTERNAL INTEGRATIONS
# ===========================================

# Line OA (Official Account) Integration
# Get from Line Developers Console: https://developers.line.biz/
LINE_CHANNEL_ACCESS_TOKEN=your_line_channel_access_token
LINE_CHANNEL_SECRET=your_line_channel_secret
LINE_WEBHOOK_URL=https://your-domain.com/api/v1/integrations/line/webhook

# Webhook Configuration
WEBHOOK_SECRET=your_secure_webhook_secret_key
WEBHOOK_TIMEOUT=30000

# ===========================================
# MONITORING & ERROR TRACKING
# ===========================================

# Sentry Configuration
# Note: Sentry DSN is now configured in sentry.server.config.ts and sentry.client.config.ts
# Organization: chemecosmetics (chemecosmetics.sentry.io)
NEXT_PUBLIC_SENTRY_DSN=https://your_sentry_dsn@your_region.sentry.io/project_id
SENTRY_ORG=chemecosmetics
SENTRY_PROJECT=chatbot-management
SENTRY_AUTH_TOKEN=your_sentry_auth_token

# Performance Monitoring
SENTRY_TRACES_SAMPLE_RATE=0.1
SENTRY_PROFILES_SAMPLE_RATE=0.1

# ===========================================
# SECURITY & API CONFIGURATION
# ===========================================

# API Security
API_RATE_LIMIT_REQUESTS=100
API_RATE_LIMIT_WINDOW_MS=900000
API_KEY_ENCRYPTION_SECRET=your_32_character_encryption_secret

# CORS Configuration
CORS_ALLOWED_ORIGINS=http://localhost:3000,https://your-domain.com
CORS_ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS

# Session Configuration
SESSION_SECRET=your_session_secret_key_here
SESSION_MAX_AGE=604800

# ===========================================
# FEATURE FLAGS & CONFIGURATION
# ===========================================

# Feature Flags
ENABLE_CHATBOT_MANAGEMENT=true
ENABLE_DOCUMENT_PROCESSING=true
ENABLE_VECTOR_SEARCH=true
ENABLE_LINE_INTEGRATION=true
ENABLE_REAL_TIME_CHAT=true
ENABLE_ANALYTICS_DASHBOARD=true
ENABLE_MULTI_LANGUAGE=true

# Chat Configuration
MAX_CONVERSATION_HISTORY=50
MAX_MESSAGE_LENGTH=4000
DEFAULT_CHAT_TIMEOUT=30000

# File Upload Configuration
MAX_FILE_SIZE=10485760
ALLOWED_FILE_TYPES=pdf,doc,docx,txt,md,jpg,jpeg,png
MAX_FILES_PER_UPLOAD=10

# ===========================================
# DEVELOPMENT & DEBUGGING
# ===========================================

# Environment
NODE_ENV=development
NEXT_PUBLIC_NODE_ENV=development

# Debug Configuration
DEBUG=chatbot:*
LOG_LEVEL=info
ENABLE_API_LOGGING=true
ENABLE_PERFORMANCE_LOGGING=true

# Development URLs
NEXT_PUBLIC_APP_URL=http://localhost:3000
NEXT_PUBLIC_API_URL=http://localhost:3000/api

# ===========================================
# PRODUCTION OVERRIDES
# ===========================================
# These values should be set differently in production

# Production URLs (override in production environment)
# NEXT_PUBLIC_APP_URL=https://your-production-domain.com
# NEXT_PUBLIC_API_URL=https://your-production-domain.com/api

# Production Security (override in production environment)
# SESSION_SECURE=true
# COOKIE_SECURE=true
# FORCE_HTTPS=true

# Production Performance (override in production environment)
# API_RATE_LIMIT_REQUESTS=1000
# SENTRY_TRACES_SAMPLE_RATE=0.01
# LOG_LEVEL=warn

# ===========================================
# COST MANAGEMENT & OPTIMIZATION
# ===========================================

# Cost Tracking
ENABLE_COST_TRACKING=true
COST_ALERT_THRESHOLD=100.00
DAILY_SPEND_LIMIT=50.00

# Model Cost Optimization
PREFER_COST_EFFECTIVE_MODELS=false
AUTO_SWITCH_TO_CHEAPER_MODELS=false
MAX_TOKENS_PER_REQUEST=2000

# ===========================================
# INTERNATIONALIZATION (I18N)
# ===========================================

# Language Configuration
DEFAULT_LOCALE=en
SUPPORTED_LOCALES=en,th
ENABLE_RTL_SUPPORT=false

# Translation Services (Optional)
# GOOGLE_TRANSLATE_API_KEY=your_google_translate_key
# DEEPL_API_KEY=your_deepl_api_key

# ===========================================
# ANALYTICS & REPORTING
# ===========================================

# Analytics Configuration
ENABLE_USER_ANALYTICS=true
ENABLE_CONVERSATION_ANALYTICS=true
ENABLE_PERFORMANCE_ANALYTICS=true

# Reporting
DAILY_REPORT_EMAIL=admin@your-domain.com
WEEKLY_REPORT_ENABLED=true
MONTHLY_REPORT_ENABLED=true

# ===========================================
# BACKUP & DISASTER RECOVERY
# ===========================================

# Backup Configuration
ENABLE_AUTO_BACKUP=true
BACKUP_FREQUENCY=daily
BACKUP_RETENTION_DAYS=30
BACKUP_S3_BUCKET=chatbot-backups-${NODE_ENV}

# ===========================================
# TESTING & CI/CD
# ===========================================

# Test Configuration
TEST_DATABASE_URL=postgresql://test_username:test_password@test_hostname/test_database
PLAYWRIGHT_HEADLESS=true
INTEGRATION_TEST_TIMEOUT=30000

# CI/CD Configuration
SKIP_BUILD_STATIC_GENERATION=false
ANALYZE_BUNDLE=false
DISABLE_ESLINT=false

# ===========================================
# DEPLOYMENT VALIDATION
# ===========================================

# Health Check Configuration
HEALTH_CHECK_TIMEOUT=5000
HEALTH_CHECK_INTERVAL=60000
DEPLOYMENT_VALIDATION_ENABLED=true

# Service Validation
VALIDATE_DATABASE_CONNECTION=true
VALIDATE_AWS_SERVICES=true
VALIDATE_EXTERNAL_APIS=true
VALIDATE_VECTOR_DATABASE=true

# ===========================================
# NOTES & INSTRUCTIONS
# ===========================================

# Setup Instructions:
# 1. Copy this file to .env.local
# 2. Fill in all required values (marked as 'your_*_here')
# 3. For production deployment, create separate environment configs
# 4. Ensure sensitive keys are stored securely (never commit to git)
# 5. Use AWS Systems Manager Parameter Store or similar for production secrets

# Required Services Setup:
# 1. Neon PostgreSQL database with pgvector extension
# 2. Stack Auth project configured
# 3. AWS account with Bedrock, S3, and IAM permissions
# 4. Sentry project for error monitoring
# 5. Line Developers account (if using Line integration)

# Security Recommendations:
# 1. Use strong, unique secrets for all keys
# 2. Rotate API keys regularly
# 3. Enable 2FA on all service accounts
# 4. Monitor API usage and costs
# 5. Set up proper CORS and rate limiting

# Performance Recommendations:
# 1. Use cost-effective models for high-volume use cases
# 2. Enable caching for frequently accessed data
# 3. Monitor and optimize vector search performance
# 4. Set appropriate rate limits and timeouts
# 5. Use CDN for static assets in production