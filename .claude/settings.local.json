{
  "permissions": {
    "allow": [
      "Bash(claude mcp:*)",
      "mcp__context7__resolve-library-id",
      "Bash(npx create-next-app:*)",
      "Bash(npm install)",
      "Bash(npx @stackframe/init-stack:*)",
      "Bash(npm run build:*)",
      "Bash(npm run lint)",
      "Bash(npm run type-check:*)",
      "Bash(npm run dev:*)",
      "Bash(curl:*)",
      "Bash(npx @sentry/wizard:*)",
      "Bash(npm install:*)",
      "Bash(git init:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git remote add:*)",
      "Bash(git push:*)",
      "Bash(git branch:*)",
      "Bash(git reset:*)",
      "WebSearch",
      "mcp__playwright__init-browser",
      "mcp__playwright__get-screenshot",
      "mcp__playwright__execute-code",
      "mcp__sentry__find_organizations",
      "mcp__sentry__find_projects",
      "mcp__sentry__search_events",
      "mcp__sentry__search_issues",
      "Bash(npm run test:api:*)",
      "mcp__context7__get-library-docs",
      "Bash(npx tsc:*)",
      "Bash(ls:*)",
      "Bash(node:*)",
      "Bash(chmod:*)",
      "Bash(powershell.exe:*)",
      "Bash(.specify/scripts/powershell/check-task-prerequisites.ps1 -Json)",
      "Bash(npx:*)",
      "Bash(npm run test:e2e:*)",
      "Bash(npm ci:*)",
      "Bash(git checkout:*)",
      "Bash(git show-branch:*)",
      "Bash(git remote:*)",
      "mcp__playwright__get-context",
      "mcp__neon__list_projects",
      "mcp__neon__get_database_tables",
      "mcp__neon__describe_table_schema",
      "mcp__neon__run_sql",
      "mcp__shadcn__get_project_registries",
      "mcp__shadcn__search_items_in_registries",
      "mcp__shadcn__get_add_command_for_items",
      "Bash(pkill:*)"
    ],
    "deny": [],
    "ask": []
  },
  "hooks": {
    "PreToolUse": [
      {
        "matcher": "Bash",
        "hooks": [
          {
            "type": "command",
            "command": ".claude/hooks/pre-tool-validation.sh \"$TOOL_NAME\" \"$TOOL_ARGS\""
          },
          {
            "type": "command",
            "command": ".claude/hooks/build-validation.sh \"$TOOL_NAME\" \"$TOOL_ARGS\""
          },
          {
            "type": "command",
            "command": ".claude/hooks/security-monitor.sh \"$TOOL_NAME\" \"$TOOL_ARGS\""
          }
        ]
      },
      {
        "matcher": "Write|Edit",
        "hooks": [
          {
            "type": "command",
            "command": ".claude/hooks/security-monitor.sh \"$TOOL_NAME\" \"$TOOL_ARGS\""
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "*",
        "hooks": [
          {
            "type": "command",
            "command": ".claude/hooks/post-tool-logging.sh \"$TOOL_NAME\" \"$TOOL_ARGS\" \"$TOOL_RESULT\" \"$EXIT_CODE\""
          }
        ]
      }
    ],
    "UserPromptSubmit": [
      {
        "matcher": "*",
        "hooks": [
          {
            "type": "command",
            "command": ".claude/hooks/user-prompt-validator.sh \"$USER_PROMPT\""
          }
        ]
      }
    ]
  },
  "disableAllHooks": true
}